# Generated by Django 3.2.5 on 2021-07-12 18:45

import account.models.custom_user_model
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('country', '0002_auto_20210712_1845'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('identity_number', models.CharField(max_length=15, verbose_name='Kimlik Numarası')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Doğum Tarihi')),
                ('gender', models.PositiveSmallIntegerField(choices=[(1, 'Erkek'), (2, 'Kadın'), (3, 'Other')], default=1, verbose_name='Cinsiyet')),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'Default'), (2, 'Çocuk'), (3, 'Ebeveyn'), (4, 'Eğitmen')], default=1, verbose_name='Hesap Türü')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Kullanıcı',
                'verbose_name_plural': 'Kullanıcılar',
            },
            managers=[
                ('objects', account.models.custom_user_model.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ParentProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='user_parent_profiles', serialize=False, to='account.customuser', verbose_name='Kullanıcı')),
                ('profession', models.CharField(blank=True, max_length=500, null=True, verbose_name='Meslek')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='city_parent_profiles', to='country.city', verbose_name='Şehir')),
            ],
            options={
                'verbose_name': 'Ebeveyn',
                'verbose_name_plural': 'Ebeveynler',
            },
        ),
        migrations.CreateModel(
            name='ChildProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='user_child_profiles', serialize=False, to='account.customuser', verbose_name='Kullanıcı')),
                ('hobbies', models.CharField(blank=True, max_length=500, null=True, verbose_name='Hobiler')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='city_child_profiles', to='country.city', verbose_name='Şehir')),
            ],
            options={
                'verbose_name': 'Çocuk',
                'verbose_name_plural': 'Çocuklar',
            },
        ),
        migrations.CreateModel(
            name='ChildList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='child_list', to='account.childprofile', verbose_name='Çocuk')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_children', to='account.parentprofile', verbose_name='Ebeveyn')),
            ],
            options={
                'verbose_name': 'Ebeveyn ve Çocuk Kaydı',
                'verbose_name_plural': 'Ebeveyn ve Çocuk Kayıtları',
            },
        ),
    ]
